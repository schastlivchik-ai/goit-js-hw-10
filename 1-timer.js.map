{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nlet userSelectedDate;\nconst button = document.querySelector(`button[data-start]`);\nconst input = document.querySelector(`#datetime-picker`)\n\nfunction activateButton(currentDate) {\n    \n    if (userSelectedDate > currentDate) {\n        button.disabled = false;\n    } else {\n        iziToast.show({\n            title: `Error`,\n            message: 'Illegal operation'\n        });\n        button.disabled = true;\n    };\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    activateButton(options.defaultDate)\n    \n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nbutton.addEventListener(`click`, () => {\n    button.disabled = true;\n    input.disabled = true;\n    const formatNumber = (num) => String(num).padStart(2, '0');\n    const timerInterval = setInterval(() => {\n        let deltaTime = userSelectedDate - new Date();\n        if (deltaTime <= 0) {\n            deltaTime = 0;\n            clearInterval(timerInterval);\n            input.disabled = false;\n        } else {\n            document.querySelector(`span[data-days]`).textContent = formatNumber(convertMs(deltaTime).days);\n            document.querySelector(`span[data-hours]`).textContent = formatNumber(convertMs(deltaTime).hours);\n            document.querySelector(`span[data-minutes]`).textContent = formatNumber(convertMs(deltaTime).minutes);\n            document.querySelector(`span[data-seconds]`).textContent = formatNumber(convertMs(deltaTime).seconds);\n        };\n    }, 1000)\n})\n\n"],"names":["userSelectedDate","button","input","activateButton","currentDate","iziToast","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","formatNumber","num","timerInterval","deltaTime"],"mappings":"2GAOA,IAAIA,EACJ,MAAMC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAQ,SAAS,cAAc,kBAAkB,EAEvD,SAASC,EAAeC,EAAa,CAE7BJ,EAAmBI,EACnBH,EAAO,SAAW,IAElBI,EAAS,KAAK,CACV,MAAO,QACP,QAAS,mBACrB,CAAS,EACDJ,EAAO,SAAW,GAE1B,CAEA,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBP,EAAmBO,EAAc,CAAC,EAClCJ,EAAeG,EAAQ,WAAW,CAEnC,CACH,EAEAE,EAAU,mBAAoBF,CAAO,EAErC,SAASG,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAb,EAAO,iBAAiB,QAAS,IAAM,CACnCA,EAAO,SAAW,GAClBC,EAAM,SAAW,GACjB,MAAMa,EAAgBC,GAAQ,OAAOA,CAAG,EAAE,SAAS,EAAG,GAAG,EACnDC,EAAgB,YAAY,IAAM,CACpC,IAAIC,EAAYlB,EAAmB,IAAI,KACnCkB,GAAa,GACbA,EAAY,EACZ,cAAcD,CAAa,EAC3Bf,EAAM,SAAW,KAEjB,SAAS,cAAc,iBAAiB,EAAE,YAAca,EAAaN,EAAUS,CAAS,EAAE,IAAI,EAC9F,SAAS,cAAc,kBAAkB,EAAE,YAAcH,EAAaN,EAAUS,CAAS,EAAE,KAAK,EAChG,SAAS,cAAc,oBAAoB,EAAE,YAAcH,EAAaN,EAAUS,CAAS,EAAE,OAAO,EACpG,SAAS,cAAc,oBAAoB,EAAE,YAAcH,EAAaN,EAAUS,CAAS,EAAE,OAAO,EAEhH,EAAO,GAAI,CACX,CAAC"}